{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\PUSH PULL ITI\\\\Day One\\\\lab-dayOne\\\\front\\\\src\\\\components\\\\ShortPolling\\\\ShortPolling.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n_c = Container;\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Input;\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\n_c3 = Message;\nconst ShortPolling = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:5000/short/notification');\n    const {\n      data\n    } = await response.json();\n    if (data.length > 0) {\n      setMessages(data);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 3000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const handleMessageSend = async () => {\n    if (inputValue.trim() === '') {\n      return;\n    }\n    await fetch('http://localhost:5000/short/notification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: inputValue\n      })\n    });\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Type a message...\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessageSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n      children: message.content\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ShortPolling, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n_c4 = ShortPolling;\nexport default ShortPolling;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"ShortPolling\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","Message","_c3","ShortPolling","_s","messages","setMessages","inputValue","setInputValue","fetchData","response","fetch","data","json","length","intervalId","setInterval","clearInterval","handleMessageSend","trim","method","headers","body","JSON","stringify","content","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","_id","_c4","$RefreshReg$"],"sources":["E:/ITI/PUSH PULL ITI/Day One/lab-dayOne/front/src/components/ShortPolling/ShortPolling.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\n\nconst ShortPolling = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const fetchData = async () => {\n    const response = await fetch('http://localhost:5000/short/notification');\n    const { data } = await response.json();\n    if (data.length > 0) {\n      setMessages(data);\n    }\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 3000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const handleMessageSend = async () => {\n    if (inputValue.trim() === '') {\n      return;\n    }\n\n    await fetch('http://localhost:5000/short/notification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        content: inputValue,\n      }),\n    });\n\n    setInputValue('');\n  };\n\n  return (\n    <Container>\n      <Input\n        placeholder=\"Type a message...\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button onClick={handleMessageSend}>Send</button>\n      {messages.map((message) => (\n        <Message key={message._id}>{message.content}</Message>\n      ))}\n    </Container>\n  );\n};\n\nexport default ShortPolling;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\PUSH PULL ITI\\\\Day One\\\\lab-dayOne\\\\front\\\\src\\\\components\\\\LongPolling\\\\LongPolling.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n_c = Container;\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Input;\nconst ChannelInput = styled(Input)`\n  margin-bottom: 10px;\n`;\n_c3 = ChannelInput;\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\n_c4 = Message;\nconst LongPollingPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [inputChannel, setInputChannel] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:5000/long/notification?channel=${inputChannel}`);\n      const data = await response.json();\n      setMessages(data.data);\n    };\n    fetchData();\n  }, [inputChannel]);\n  const handleMessageSend = async () => {\n    const response = await fetch(`http://localhost:5000/long/notification?channel=${inputChannel}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: inputValue\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessages([...messages, data.data]);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Long Polling Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChannelInput, {\n      type: \"text\",\n      placeholder: \"Enter a channel\",\n      value: inputChannel,\n      onChange: event => setInputChannel(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter a message\",\n      value: inputValue,\n      onChange: event => setInputValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessageSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n      children: message.message\n    }, message._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(LongPollingPage, \"WVzcNrbL3D86tzLWsTH2dSS08Y8=\");\n_c5 = LongPollingPage;\nexport default LongPollingPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"ChannelInput\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"LongPollingPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","ChannelInput","_c3","Message","_c4","LongPollingPage","_s","messages","setMessages","inputValue","setInputValue","inputChannel","setInputChannel","fetchData","response","fetch","data","json","handleMessageSend","method","headers","body","JSON","stringify","message","success","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","event","target","onClick","map","_id","_c5","$RefreshReg$"],"sources":["E:/ITI/PUSH PULL ITI/Day One/lab-dayOne/front/src/components/LongPolling/LongPolling.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n\nconst ChannelInput = styled(Input)`\n  margin-bottom: 10px;\n`;\n\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\n\nconst LongPollingPage = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [inputChannel, setInputChannel] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:5000/long/notification?channel=${inputChannel}`);\n      const data = await response.json();\n      setMessages(data.data);\n    };\n\n    fetchData();\n  }, [inputChannel]);\n\n  const handleMessageSend = async () => {\n    const response = await fetch(`http://localhost:5000/long/notification?channel=${inputChannel}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: inputValue }),\n    });\n\n    const data = await response.json();\n\n    if (data.success) {\n      setMessages([...messages, data.data]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Long Polling Example</h1>\n      <ChannelInput\n        type=\"text\"\n        placeholder=\"Enter a channel\"\n        value={inputChannel}\n        onChange={(event) => setInputChannel(event.target.value)}\n      />\n      <Input\n        type=\"text\"\n        placeholder=\"Enter a message\"\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n      />\n      <button onClick={handleMessageSend}>Send</button>\n      {messages.map((message) => (\n        <Message key={message._id}>{message.message}</Message>\n      ))}\n    </Container>\n  );\n};\n\nexport default LongPollingPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
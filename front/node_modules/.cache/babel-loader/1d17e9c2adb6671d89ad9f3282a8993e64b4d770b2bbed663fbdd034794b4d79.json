{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITI\\\\PUSH PULL ITI\\\\Day One\\\\lab-dayOne\\\\front\\\\src\\\\components\\\\ShortPolling\\\\ShortPolling.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n_c = Container;\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Input;\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\nconst ShortPolling = () => {\n  _s();\n  const [messages, setMessages] = useState({\n    data: []\n  });\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:5000/short/notification');\n      const data = await response.json();\n      if (data.length > 0) {\n        setMessages({\n          data\n        });\n        console.log({\n          data\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  const handleMessageSend = async () => {\n    const response = await fetch('http://localhost:5000/short/notification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: inputValue\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      setMessages({\n        data: [...messages.data, data]\n      });\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Short Polling Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter a message\",\n      value: inputValue,\n      onChange: event => setInputValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessageSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), messages.data.map(message => /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ShortPolling, \"wElsAshlWFXwyDQBITNN9lkiONU=\");\n_c3 = ShortPolling;\nexport default ShortPolling;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"ShortPolling\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Container","div","_c","Input","input","_c2","Message","ShortPolling","_s","messages","setMessages","data","inputValue","setInputValue","fetchData","response","fetch","json","length","console","log","handleMessageSend","method","headers","body","JSON","stringify","message","success","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","event","target","onClick","map","_c3","$RefreshReg$"],"sources":["E:/ITI/PUSH PULL ITI/Day One/lab-dayOne/front/src/components/ShortPolling/ShortPolling.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n`;\n\nconst Message = styled.div`\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  max-width: 500px;\n`;\n\nconst ShortPolling = () => {\n  const [messages, setMessages] = useState({ data: [] });\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:5000/short/notification');\n      const data = await response.json();\n      if(data.length > 0){\n        setMessages({ data });\n        console.log({ data });\n      }\n      \n    };\n\n    fetchData();\n  }, []);\n\n  const handleMessageSend = async () => {\n    const response = await fetch('http://localhost:5000/short/notification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: inputValue }),\n    });\n\n    const data = await response.json();\n\n    if (data.success) {\n        setMessages({ data: [...messages.data, data] });\n      setInputValue('');\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Short Polling Example</h1>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter a message\"\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n      />\n      <button onClick={handleMessageSend}>Send</button>\n      {messages.data.map((message) => (\n        <ul>\n            \n        </ul>\n        \n        ))}\n    </Container>\n  );\n};\n\nexport default ShortPolling;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}